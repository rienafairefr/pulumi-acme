// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package acme

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Registration struct {
	pulumi.CustomResourceState

	AccountKeyPem          pulumi.StringOutput                         `pulumi:"accountKeyPem"`
	EmailAddress           pulumi.StringOutput                         `pulumi:"emailAddress"`
	ExternalAccountBinding RegistrationExternalAccountBindingPtrOutput `pulumi:"externalAccountBinding"`
	RegistrationUrl        pulumi.StringOutput                         `pulumi:"registrationUrl"`
}

// NewRegistration registers a new resource with the given unique name, arguments, and options.
func NewRegistration(ctx *pulumi.Context,
	name string, args *RegistrationArgs, opts ...pulumi.ResourceOption) (*Registration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountKeyPem == nil {
		return nil, errors.New("invalid value for required argument 'AccountKeyPem'")
	}
	if args.EmailAddress == nil {
		return nil, errors.New("invalid value for required argument 'EmailAddress'")
	}
	var resource Registration
	err := ctx.RegisterResource("acme:index/registration:Registration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegistration gets an existing Registration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegistrationState, opts ...pulumi.ResourceOption) (*Registration, error) {
	var resource Registration
	err := ctx.ReadResource("acme:index/registration:Registration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Registration resources.
type registrationState struct {
	AccountKeyPem          *string                             `pulumi:"accountKeyPem"`
	EmailAddress           *string                             `pulumi:"emailAddress"`
	ExternalAccountBinding *RegistrationExternalAccountBinding `pulumi:"externalAccountBinding"`
	RegistrationUrl        *string                             `pulumi:"registrationUrl"`
}

type RegistrationState struct {
	AccountKeyPem          pulumi.StringPtrInput
	EmailAddress           pulumi.StringPtrInput
	ExternalAccountBinding RegistrationExternalAccountBindingPtrInput
	RegistrationUrl        pulumi.StringPtrInput
}

func (RegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*registrationState)(nil)).Elem()
}

type registrationArgs struct {
	AccountKeyPem          string                              `pulumi:"accountKeyPem"`
	EmailAddress           string                              `pulumi:"emailAddress"`
	ExternalAccountBinding *RegistrationExternalAccountBinding `pulumi:"externalAccountBinding"`
}

// The set of arguments for constructing a Registration resource.
type RegistrationArgs struct {
	AccountKeyPem          pulumi.StringInput
	EmailAddress           pulumi.StringInput
	ExternalAccountBinding RegistrationExternalAccountBindingPtrInput
}

func (RegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*registrationArgs)(nil)).Elem()
}

type RegistrationInput interface {
	pulumi.Input

	ToRegistrationOutput() RegistrationOutput
	ToRegistrationOutputWithContext(ctx context.Context) RegistrationOutput
}

func (*Registration) ElementType() reflect.Type {
	return reflect.TypeOf((*Registration)(nil))
}

func (i *Registration) ToRegistrationOutput() RegistrationOutput {
	return i.ToRegistrationOutputWithContext(context.Background())
}

func (i *Registration) ToRegistrationOutputWithContext(ctx context.Context) RegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationOutput)
}

type RegistrationOutput struct {
	*pulumi.OutputState
}

func (RegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Registration)(nil))
}

func (o RegistrationOutput) ToRegistrationOutput() RegistrationOutput {
	return o
}

func (o RegistrationOutput) ToRegistrationOutputWithContext(ctx context.Context) RegistrationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RegistrationOutput{})
}
